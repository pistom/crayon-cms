{% extends "base.html.twig" %}
{% set contentClass = 'content__page' %}
{% block head %}
    <script src="https://cloud.tinymce.com/stable/tinymce.min.js?apiKey={{ settings.tinymce_api_key }}"></script>
{% endblock %}

{% block content %}

    <h1>Page</h1>
    <form action="" id="pageForm">
        <div class="page">
            <div class="page__block">
                <label class="page__blockLabel" for="pageName">Alias</label>
                <div class="page__blockInput">
                    <input type="text" name="pageName" value="{{ pageName }}" id="pageName" {{ userRole != 'admin' ? 'readonly disabled' : '' }}>
                </div>
            </div>
            <div class="page__block">
                <label class="page__blockLabel" for="pageTitle">Title</label>
                <div class="page__blockInput">
                    <input type="text" name="pageTitle" value="{{ page.title }}" id="pageTitle">
                </div>
            </div>
            <div class="page__block">
                <label class="page__blockLabel" for="pageDescription">Description</label>
                <div class="page__blockInput">
                    <input type="text" name="pageDescription" value="{{ page.description }}" id="pageDescription">
                </div>
            </div>
            <div class="page__block">
                <label class="page__blockLabel" for="pageMenu">Menu</label>
                <div class="page__blockInput">
                    <select name="pageMenu" class="input--narrow" id="pageMenu" {{ userRole != 'admin' ? 'readonly disabled' : '' }}>
                        {% for key,menu in menus %}
                            <option value="{{ key }}" {{ key==page.menu ? 'selected' : '' }}>{{ key }}</option>
                        {% endfor %}
                    </select>
                </div>
            </div>
            <div class="page__block">
                <label class="page__blockLabel" for="pageContent">Content</label>
                <div class="page__blockInput">
                    <textarea class="tinymce pageContent" name="pageContent" id="pageContent">
                        {{ page.content }}
                    </textarea>
                </div>
            </div>
            <div class="page__block">
                <label class="page__blockLabel" for="pageScripts">Scripts</label>
                <div class="page__blockInput">
                    <textarea name="pageScripts" id="pageScripts" {{ userRole != 'admin' ? 'readonly disabled' : '' }}>
                        {% spaceless %}{{ page.scripts }}{% endspaceless %}
                    </textarea>
                </div>
            </div>
            {% if pageName == '' %}
            <div id="addRouteBlock">
                <label class="page__blockLabel" for="addRoute"><input id="addRoute" type="checkbox" name="addRoute" value="true" checked>Create route</label>
                <div class="page__blockInput">
                    <table>
                        <thead>
                            <tr>
                                <th>Route</th>
                                <th>Path</th>
                                <th>Name</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><input type="text" name="routeRoute" value=""></td>
                                <td><input type="text" name="routePath" value=""></td>
                                <td><input type="text" name="routeName" value=""></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            {% endif %}
            <div class="page__block">
                <button type="submit" class="btn btn--green btn--right"><i class="fa fa-floppy-o" aria-hidden="true"></i> Save</button>
            </div>
        </div>
    </form>

{% endblock %}

{% block scripts %}
    <script>
        // TINY MCE
        var loadTinyMCE = function(){
            tinymce.init({
                selector:'textarea.tinymce',
                setup: function (editor) {
                    editor.on('change', function () {
                        tinymce.triggerSave();
                    });
                },
                height : "300",
                force_br_newlines : false,
                force_p_newlines : true,
                forced_root_block : '',
                plugins: "code textcolor lists advlist image link hr",
                toolbar: "undo redo | bold italic underline alignleft aligncenter alignright | bullist numlist hr | forecolor | styleselect fontsizeselect subscript superscript | bullist numlist outdent indent | image link",
                image_caption: true,
                image_prepend_url: _root_+"/images/pages/",
                textcolor_map: [
                    "0DC3CA", "Niebieski",
                    "4D4F4F", "Szary",
                    "FD0864", "Czerwony",
                    "8ABE2B", "Zielony"
                ],
                style_formats: [
                    { title: 'Heaer 1', block: 'h1', classes: 'title title--1'},
                    { title: 'Heaer 2', block: 'h2', classes: 'title title--2'},
                    { title: 'Heaer 3', block: 'h3', classes: 'title title--3'},
                    { title: 'Paragraph', block: 'p'},
                    { title: 'Blockquotes', items: [
                        { title: 'Citation block 1 qm', block: 'blockquote', wrapper: true},
                        { title: 'Citation block 1', block: 'blockquote', wrapper: true, classes: 'no-qm'},
                        { title: 'Citation block 2', selector: 'blockquote', classes: 'citation'},
                        { title: 'Author', selector: 'blockquote p', classes: 'quote__author'},
                        { title: 'Link', selector: 'blockquote p', classes: 'quote__url'}
                    ]},
                    { title: 'Text small', selector: 'p, ol, ul, li, span, div', classes: 'text--small'}
                ]
            });
        };
        loadTinyMCE();



        var pageForm = document.getElementById('pageForm');
        var routeBlock = document.getElementById('addRouteBlock');

        pageForm.pageName.addEventListener('keyup',function(e){
            e.target.value = validateInput(e.target,/^[a-z]$/i);
        },false);

        // FILL ROUTING
        if(routeBlock){
            pageForm.pageName.addEventListener('keyup',function(e){
                copyInput(e.target,pageForm.routeRoute);
            },false);
            pageForm.pageName.addEventListener('keyup',function(e){
                copyInput(e.target,pageForm.routePath,'/');
            },false);
            pageForm.pageTitle.addEventListener('keyup',function(e){
                copyInput(e.target,pageForm.routeName);
            },false);
        }

        // SEND FORM
        var pageName = '{{ pageName != '' ? '?page='~pageName : '' }}';
        pageForm.addEventListener('submit',function(e){
            e.preventDefault();
            var data = serializeFormData(e.target);
            atomic.post("page.save.php"+pageName ,data)
                .success(function(data){
                    if(data.status == 'success'){
                        showMessage('success','Done','Data has been saved');
                        pageName = '?page='+e.target.pageName.value;
                        routeBlock.parentNode.removeChild(routeBlock);
                    }
                    if(data.status == 'error')
                        showMessage('error','Error','Data not saved');
                })
                .error(function(data){
                    showMessage('error','Error','Server error');
                })
        },false);
    </script>
{% endblock %}